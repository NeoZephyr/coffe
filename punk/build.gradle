plugins {
    id 'org.springframework.boot' version '2.6.5'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'groovy'
    id 'com.google.protobuf' version '0.8.15'
}

group = 'com.pain.flame'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'
targetCompatibility = 1.8

def grpcVersion = '1.38.0'
def protobufVersion = '3.12.0'
def protocVersion = protobufVersion

repositories {
    mavenCentral()
}

dependencies {

    implementation fileTree(dir:"libs", includes: ["*.jar"])
    // org.springframework.boot:spring-boot-starter-jetty:
    implementation group: "org.springframework.boot", name: "spring-boot-starter-jetty", version: "2.1.18.RELEASE"
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'org.springframework.boot:spring-boot-starter-aop'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.spockframework:spock-core:2.3-groovy-2.5'
    implementation 'org.codehaus.groovy:groovy:2.5.0'

    // annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor:2.6.3'

    implementation group: 'org.antlr', name: 'antlr4', version: '4.10.1'
    implementation group: 'commons-io', name: 'commons-io', version: '2.8.0'
    implementation group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'

    implementation 'org.springframework.boot:spring-boot-starter-quartz'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.0'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.21'

    implementation 'org.xerial.snappy:snappy-java:1.1.7.3'

    implementation 'org.apache.commons:commons-lang3:3.12.0'

    implementation 'org.apache.htrace:htrace-core4:4.1.0-incubating'

    implementation group: 'io.netty', name: 'netty-all', version: '4.1.68.Final'
    implementation group: 'com.google.guava', name: 'guava', version: '30.1.1-jre'
    implementation 'com.alibaba:druid:1.2.8'

    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'
    implementation 'org.apache.commons:commons-csv:1.8'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'org.antlr:antlr4:4.11.1'
    implementation 'org.apache.zookeeper:zookeeper:3.4.14'
    implementation 'org.apache.curator:curator-framework:2.12.0'
    implementation 'org.apache.curator:curator-client:2.12.0'
    implementation 'org.apache.curator:curator-recipes:2.12.0'

//      https://mvnrepository.com/artifact/org.mybatis/mybatis
//    implementation group: 'org.mybatis', name: 'mybatis', version: '3.4.6'
//    implementation group: 'org.mybatis', name: 'mybatis-spring', version: '1.3.1'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'

    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    implementation "io.grpc:grpc-core:${grpcVersion}"
    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
                'Main-Class': 'net.grpc.RpcTest'
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}